name: ci

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main

env:
  DEPLOY_REGION: us-east-2

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup node 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: cache - node modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules/
          key: ${{ hashFiles('package-lock.json') }}
      - name: install dependencies
        run: npm install
      - name: build
        run: npm run build
      - name: test
        run: npm run test
      - name: zip deploy package
        run: |
          zip -r package.zip build
      - name: upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

  deploy:
    runs-on: ubuntu-latest
    needs:
      - ci
    if: github.ref_name == 'add-automated-deploy'
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      # DEPLOY TO DEV ALWAYS ON MERGE TO MAIN - DEV IS CLOUDFORMATION
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        # takes 180 seconds to timeout if role doesn't exist... no need to wait that long
        timeout-minutes: 1
        with:
          aws-region: ${{ env.DEPLOY_REGION }}
          role-to-assume: arn:aws:iam::812212307632:role/github-actions/${{ github.repository }}
      - name: deploy static content - dev
        run: |
          BUCKET_S3_URI=s3://react-cors-spa-sxcb7cnjm6 npm run deploy-static
      - name: release
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: simple
          package-name: release-please-action
          default-branch: add-automated-deploy
          prerelease: true
          bootstrap-sha: fcc2e19069be3ee55c29e4ab19580d6e74965743 # exclude all commits prior to fork
          commit-search-depth: 100
      # ON RELEASE CREATION - STORE ARTIFACT FOR HIGHER ENV DEPLOYMENT
      - name: zip deploy package
        if: ${{ steps.release.outputs.release_created }}
        run: |
          zip -r package.zip build
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        if: ${{ steps.release.outputs.release_created }}
        # env:
        #   GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_name: package.zip
          asset_content_type: application/zip